services:

    ### PostgreSQL for Squash TM
    squash-tm-pg:
        container_name: squash-tm-pg
        image: postgres:14
        restart: unless-stopped
        environment:
            POSTGRES_DB: $POSTGRES_DB
            POSTGRES_USER: $POSTGRES_USER
            POSTGRES_PASSWORD: $POSTGRES_PASSWORD
        ports:
            - "5432:5432"
        volumes:
            - squash-tm-db:/var/lib/postgresql/data
        networks:
            - qa_net

    ### Squash TM Web UI
    squash-tm:
        container_name: squash-tm
        image: squashtest/squash:11.0.0
        depends_on:
            - squash-tm-pg
        restart: unless-stopped
        environment:
            SPRING_PROFILES_ACTIVE: postgresql
            SPRING_DATASOURCE_URL: jdbc:postgresql://squash-tm-pg:5432/${POSTGRES_DB}
            SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
            SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - squash-tm-logs:/opt/squash-tm/logs
        labels:
            - traefik.enable=true
            - traefik.http.routers.squash-tm.rule=Host(`${SQUASH_UI_HOST}`)
            - traefik.http.routers.squash-tm.entrypoints=websecure
            - traefik.http.routers.squash-tm.tls=true
            - traefik.http.services.squash-tm.loadbalancer.server.port=8080
        networks:
            - qa_net

    ### Squash Orchestrator
    orchestrator:
        container_name: squash-orchestrator
        image: squashtest/squash-orchestrator:latest
        restart: unless-stopped
        volumes:
            - ./data/trusted_key.pub:/etc/squashtf/squash.pub:ro
            # license bind is optional for community version
        labels:
            - traefik.enable=true
            - traefik.http.routers.orchestrator.rule=Host(`${SQUASH_ORCHESTRATOR_HOST}`)
            - traefik.http.routers.orchestrator.entrypoints=websecure
            - traefik.http.routers.orchestrator.tls=true
            - traefik.http.services.orchestrator.loadbalancer.server.port=7775
        networks:
            - qa_net

volumes:
    squash-tm-logs:
    squash-tm-db:

networks:
    qa_net:
        name: "proxy"
        external: true

